{"version":3,"sources":["components/Navbar/Navbar.js","components/Home/Home.js","components/UpcomingItems/UpcomingItems.js","components/CurrentItems/CurrentItems.js","App.js","reportWebVitals.js","reducers/upcomingItemsReducer.js","index.js"],"names":["Navbar","className","to","Home","UpcomingItems","dispatch","useDispatch","handleUpcomingItems","a","fetchUpcomingItems","data","console","log","type","payload","useEffect","store","length","fetch","response","json","Jsondata","slice","useSelector","state","uitems","map","element","style","width","borderBottom","src","item","images","background","name","itemId","renderingList","CurrentItems","handleCurrentItems","fetchCurrentItems","citems","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d0ce3fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport {Link} from 'react-router-dom';\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"bg-dark p-2 d-flex justify-content-between align-items-center\">\r\n            <h1 className=\"text-white\">Fortnite</h1>\r\n            <ul>\r\n                <Link to=\"/uitems\" className=\"btn\"><li>Upcoming Items</li></Link>\r\n                <Link to=\"/citems\" className=\"btn\"><li>Current Items</li></Link>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"Home\">\r\n            <h1 className=\"form-group text-white\">Welcome to Fortnite Webpage</h1>\r\n            <p className=\"form-group text-white\">This is Fortnite FanPage you can get all you want from here </p>\r\n            <button className=\"btn-temp\">Get started</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React,{useEffect} from 'react'\r\nimport {useDispatch , useSelector} from 'react-redux';\r\n\r\nconst UpcomingItems = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleUpcomingItems = async () => {\r\n        let data = await fetchUpcomingItems();\r\n        console.log(data);\r\n        dispatch({type:\"UITEMS\" , payload : data});\r\n    }\r\n\r\n    useEffect( () => {\r\n\r\n      \r\n        if(store.length === 0) {\r\n        console.log(\"Entered useEffect\");\r\n       handleUpcomingItems();\r\n        }\r\n        \r\n        \r\n    }, [handleUpcomingItems])\r\n    \r\n    const fetchUpcomingItems =async () => {\r\n   const url= \"https://fortnite-api.theapinetwork.com/upcoming/get\";\r\n   const response = await fetch(url);\r\n   const Jsondata = await response.json();\r\n   const data = Jsondata.data;\r\n   return data.slice(0,10)\r\n   \r\n\r\n\r\n    }\r\n    const renderingList = (store) => {\r\n        if(store.length === 0 ) {\r\n          return  <h1>Loading</h1>\r\n        }\r\n     let items =   store.map(element=> {\r\n        return <div key={element.itemId} className=\"card form-group\" style={{width:\"30%\"}}>\r\n            <img className=\"card-img-top\" style={{borderBottom:\"1px solid #eee\"}} src={element.item.images.background} />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{element.item.name}</h5>\r\n            </div>\r\n            \r\n        </div>            \r\n        }\r\n        )\r\n        return items;\r\n    }\r\n    \r\n  //  const store= useSelector((state) => state[0]?.itemId);\r\n    //console.log(store +\"store value rendered\");\r\n\r\n    const store= useSelector((state) => state.uitems);\r\n    return (\r\n        <div className=\"d-flex justify-content-around flex-wrap mt-5\">\r\n           {renderingList(store)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpcomingItems\r\n","\r\nimport React,{useEffect} from 'react'\r\nimport {useDispatch , useSelector} from 'react-redux';\r\n\r\nconst CurrentItems = () => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleCurrentItems = async () => {\r\n        let data = await fetchCurrentItems();\r\n        console.log(data);\r\n        dispatch({type:\"CITEMS\" , payload : data});\r\n    }\r\n\r\n    useEffect( () => {\r\n\r\n      \r\n        if(store.length === 0) {\r\n        console.log(\"Entered useEffect\");\r\n       handleCurrentItems();\r\n        }\r\n        \r\n        \r\n    }, [handleCurrentItems])\r\n    \r\n    const fetchCurrentItems =async () => {\r\n   const url= \"https://fortnite-api.theapinetwork.com/items/list\";\r\n   const response = await fetch(url);\r\n   const Jsondata = await response.json();\r\n   const data = Jsondata.data;\r\n   return data.slice(0,10)\r\n   \r\n\r\n\r\n    }\r\n    const renderingList = (store) => {\r\n        if(store.length === 0 ) {\r\n          return  <h1>Loading</h1>\r\n        }\r\n     let items =   store.map(element=> {\r\n        return <div key={element.itemId} className=\"card form-group\" style={{width:\"30%\"}}>\r\n            <img className=\"card-img-top\" style={{borderBottom:\"1px solid #eee\"}} src={element.item.images.background} />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{element.item.name}</h5>\r\n            </div>\r\n            \r\n        </div>            \r\n        }\r\n        )\r\n        return items;\r\n    }\r\n    \r\n  \r\n\r\n    const store= useSelector((state) => state.citems);\r\n    return (\r\n        <div className=\"d-flex justify-content-around flex-wrap mt-5\">\r\n           {renderingList(store)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentItems\r\n","\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport UpcomingItems from './components/UpcomingItems/UpcomingItems';\nimport CurrentItems from './components/CurrentItems/CurrentItems';\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n     <Navbar />\n     <Switch>\n       <Route path=\"/uitems\" exact component = {UpcomingItems} />\n       <Route path=\"/citems\" exact component = {CurrentItems} />\n       <Route path=\"/\" component = {Home} />\n     </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState = {\r\n    citems: \"\",\r\n    uitems: \"\",\r\n};\r\n\r\nexport const upcomingItemsReducer = (state = initialState,action ) => {\r\n\r\n    switch(action.type){\r\n        case \"UITEMS\" :\r\n            console.log(\"Entered\");\r\n            return {...state,uitems:[...action.payload]};\r\n        case \"CITEMS\" :\r\n            return {...state,citems:[...action.payload]};\r\n        default :\r\n        return state;\r\n    }\r\n\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {upcomingItemsReducer} from './reducers/upcomingItemsReducer';\nimport {Provider} from 'react-redux';\nconst store = createStore(upcomingItemsReducer);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}